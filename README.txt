DAT405 Creative Coding _ Repository for DAT405 Creative Coding Jasmine Price_Data Visualization The aim of the project was to visualize data in a way that is interesting and interactive for the user. This project was using the data found on the website Pokemon API, where they provided the information that could be displayed on the project website. The idea of the program was to display the many different Pokemon (over 800!) to the user so it can be used for visual comparison. Some of the main features about the Pokemon, which are tactical are its type and size. Therefore, according to the height, the size of the circle the Pokemon data was displayed in got bigger/smaller. In addition, the colour of the circle changed depending on the type. For extra functionality, the user could also select if they would like all types to be displayed, or just a specific one. -SIDE NOTES-The program is best viewed on a full-size monitor (such as the MAC screens) to get a full view of the HTML elements on screen in the correct position.The API that is being used has a daily cap of 300 requests per day. If this limit is hit, an error will be displayed in the console, and it won’t be able to be accessed until the following day. Due to the API, it can be slow at loading the data. Additionally, as there are fewer of some Pokemon types, it can take time to locate and fill a screen especially when randomly selected from over 800 Pokemon in database. -User Input-The user can select one of the checkboxes on the right side of the program. They have the option to select which Pokemon type they’d like displayed, whether it be water, fairy or a mixture of all the types. To tell when all the data is loaded onscreen, the loading text in the centre will vanish. However, the user doesn’t have to wait for all the data to show, they can click any of the checkboxes when they like to start loading up another type. Additionally, there is a refresh button that can be pressed to refresh the page. -Development Process-During the development process, the potential ideas were broken down to decide the best way to visualize the data that was chosen from Pokemon API. Based on the research, the most appropriate idea was to provide a way to display all the important data in a visually stimulating way. So once some of the development issues were solved, the program was working. The result was a canvas that displayed a random Pokemon. Each Pokemon was displayed within a circle (representing a poke ball) that changed size according to the Pokemon size, and changed colour according to the type of the Pokemon.-Issues and Improvements-Some obstacles were hit during the development of the program. One of the biggest issues to overcome being the CORS browser error that prevented the data from being displayed. If this issue couldn’t be solved, an option was to use atom-live-server and host the data locally. However, this obstacle managed to be overcome by joining the members of the Pokemon API on a website called Slack. Here we were able to discuss problems with the API, and they were eventually able to provide a solution to fix the error. Another issue that occurred was the loading time of data. Although the API is slow, by removing the preloading array of twelve Pokemon, and replacing it with displaying one at a time, it accelerated the process.Whilst pleased with the outcome as it conveys the data in an interesting, clear way, for future development it could’ve been better if the canvas was more interactive, such as a mouse hover function, images or some animation.